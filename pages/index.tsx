import type { NextPage } from 'next'
import Head from 'next/head'
import axios from 'axios'
import { useState, useRef } from 'react'
import { useAppSelector } from 'store'
import { useElementSize } from '@mantine/hooks'
import { Divider, Group, Button, Box, Modal, Title } from '@mantine/core'
import { ScrollArea, AspectRatio, Center, createStyles } from '@mantine/core'
import ToolStack from 'components/ToolStack'
import SvgItem from 'components/SvgItem'

const useStyles = createStyles((theme) => ({
  box: {
    padding: 20,
    height: '100vh',
  },
}))

type Props = {}

const Home: NextPage<Props> = () => {
  const { ref, width, height } = useElementSize()
  const { classes } = useStyles()
  const { bgColor, country, year, ch } = useAppSelector((state) => state.editor)
  const [open, setOpen] = useState(false)
  const compRef = useRef('')

  const toStr = (compStr: string) => {
    // cache
    compRef.current = compStr
  }

  const mint = async () => {
    try {
      if (!compRef.current) throw new Error('invalid svg component')
      // TODO: call api
    } catch (error) {
      console.error(error)
    }
  }

  return (
    <>
      <Head>
        <title>Font NFT</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main ref={ref}>
        <Group spacing={0}>
          <ScrollArea
            className={classes.box}
            sx={{
              flex: '400px 0',
            }}
          >
            <ToolStack />
            <Box sx={{ height: 120 }} />
            <Group
              grow
              sx={{
                position: 'fixed',
                bottom: 0,
                zIndex: 10,
                left: 10,
                width: 380,
                padding: 20,
                backgroundColor: 'white',
              }}
            >
              <Button
                size="lg"
                variant="outline"
                color="dark"
                radius="md"
                onClick={() => setOpen(true)}
              >
                Preview
              </Button>
              <Button size="lg" variant="outline" color="dark" radius="md">
                Mint
              </Button>
            </Group>
          </ScrollArea>

          <Divider orientation="vertical" />

          <Center className={classes.box} sx={{ flexGrow: 1, background: bgColor }}>
            <AspectRatio
              ratio={1}
              sx={{
                width: '100%',
                maxWidth: `calc(${height}px - 40px)`,
              }}
            >
              <SvgItem toStr={toStr} />
            </AspectRatio>
          </Center>
        </Group>

        <Modal
          centered
          opened={open}
          onClose={() => setOpen(false)}
          radius="lg"
          title={
            <Title order={2} className="absolute-horizontal">
              Preview
            </Title>
          }
        >
          <Box sx={{ margin: '32px 0 16px' }}>
            <AspectRatio
              ratio={1}
              sx={{
                width: '100%',
                borderRadius: 16,
                overflow: 'hidden',
              }}
            >
              <SvgItem />
            </AspectRatio>
          </Box>

          <Box sx={{ textAlign: 'center' }}>
            <Button size="lg" variant="outline" color="dark" radius="md" px={64}>
              Mint
            </Button>
          </Box>
        </Modal>
      </main>
    </>
  )
}

export default Home

export async function getStaticProps() {
  return {
    props: {},
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every 10 seconds
    revalidate: 60 * 60 * 24, // In seconds
  }
}
